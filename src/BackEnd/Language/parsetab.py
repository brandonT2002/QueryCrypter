
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftRW_orleftRW_andrightRW_notleftTK_equalTK_notequalleftTK_lessTK_lessequalTK_greatTK_greatequalleftTK_plusTK_minusleftTK_multTK_divTK_modrightTK_uminusRW_add RW_alter RW_and RW_as RW_begin RW_boolean RW_break RW_case RW_cast RW_column RW_continue RW_create RW_date RW_declare RW_default RW_delete RW_double RW_drop RW_else RW_end RW_false RW_for RW_from RW_function RW_if RW_in RW_insert RW_int RW_into RW_len RW_loop RW_lower RW_not RW_null RW_or RW_print RW_procedure RW_rename RW_return RW_returns RW_round RW_select RW_set RW_table RW_then RW_to RW_true RW_truncate RW_typeof RW_update RW_upper RW_values RW_varchar RW_when RW_where RW_while TK_comma TK_date TK_div TK_dot TK_double TK_equal TK_field TK_great TK_greatequal TK_id TK_int TK_less TK_lessequal TK_lpar TK_minus TK_mod TK_mult TK_notequal TK_plus TK_rpar TK_semicolon TK_varcharINIT : INSTRUCTIONS\n            |INSTRUCTIONS : INSTRUCTIONS INSTRUCTION\n                    | INSTRUCTIONINSTRUCTION  : CREATETABLE TK_semicolon\n                    | ALTERTAB TK_semicolon\n                    | DROPTAB TK_semicolon\n                    | INSERTREG TK_semicolon\n                    | UPDATETAB TK_semicolon\n                    | TRUNCATETAB TK_semicolon\n                    | DELETETAB TK_semicolon\n                    | SELECT TK_semicolon\n                    | DECLAREID TK_semicolon\n                    | ASIGNID TK_semicolon\n                    | IFSTRUCT TK_semicolon\n                    | CASESTRUCT_S TK_semicolon\n                    | WHILESTRUCT TK_semicolon\n                    | FORSTRUCT TK_semicolon\n                    | FUNCDEC TK_semicolon\n                    | CALLFUNC TK_semicolon\n                    | ENCAP TK_semicolon\n                    | PRINT TK_semicolon\n                    | RW_break TK_semicolon\n                    | RW_continue TK_semicolon\n                    | RW_return EXP TK_semicolon\n                    | RW_return TK_semicolonDECLAREID    : RW_declare DECLIDS\n                    | RW_declare TK_id TYPE TK_equal EXP\n                    | RW_declare TK_id TYPE RW_default EXPDECLIDS  : DECLIDS TK_comma DECLID\n                | DECLIDDECLID : TK_id TYPEASIGNID : RW_set TK_id TK_equal EXPSELECT   : RW_select FIELDS RW_from TK_field RW_where EXP\n                | RW_select FIELDS RW_from TK_field\n                | RW_select LIST_IDSFIELDS   : LIST_IDS\n                | TK_multLIST_IDS : LIST_IDS TK_comma IDS\n                | IDSIDS  : EXP RW_as TK_varchar\n            | EXP RW_as TK_field\n            | EXPCREATETABLE : RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rparATTRIBUTES   : ATTRIBUTES TK_comma ATTRIBUTE\n                    | ATTRIBUTEATTRIBUTE : TK_field TYPEALTERTAB : RW_alter RW_table TK_field ACTIONACTION   : RW_add TK_field TYPE\n                | RW_drop RW_column TK_field\n                | RW_rename RW_to TK_field\n                | RW_rename RW_column TK_field RW_to TK_fieldDROPTAB : RW_drop RW_table TK_fieldINSERTREG : RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rparLIST_ATTRIBS : LIST_ATTRIBS TK_comma TK_field\n                    | TK_fieldLIST_EXPS    : LIST_EXPS TK_comma EXP\n                    | EXPUPDATETAB : RW_update TK_field RW_set VALUESTAB RW_where EXPVALUESTAB    : VALUESTAB TK_comma VALUETAB\n                    | VALUETAB VALUETAB : TK_field TK_equal EXPTRUNCATETAB : RW_truncate RW_table TK_fieldDELETETAB : RW_delete RW_from TK_field RW_where EXPIFSTRUCT : RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_then INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_begin INSTRUCTIONS RW_endCASESTRUCT_S : RW_case EXP WHENELSE RW_end RW_as TK_field\n                    | RW_case EXP WHENELSE RW_end RW_as TK_varchar\n                    | RW_case EXP WHENELSE RW_end\n                    | RW_case WHENELSE RW_end RW_as TK_field\n                    | RW_case WHENELSE RW_end RW_as TK_varchar\n                    | RW_case WHENELSE RW_endWHENELSE : WHENS ELSE\n                | WHENS\n                | ELSEWHENS    : WHENS WHEN\n                | WHENWHEN : RW_when EXP RW_then EXPELSE : RW_else EXPPRINT : RW_print EXPWHILESTRUCT : RW_while EXP ENCAPFORSTRUCT : RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loopFUNCDEC  : RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_procedure TK_field PARAMS RW_as ENCAP\n                | RW_create RW_procedure TK_field RW_as ENCAP\n                | RW_create RW_procedure TK_field PARAMS ENCAP\n                | RW_create RW_procedure TK_field ENCAPPARAMS   : PARAMS TK_comma PARAM\n                | PARAMPARAM    : TK_id TYPEENCAP    : RW_begin INSTRUCTIONS RW_end\n                | RW_begin RW_endCALLFUNC : TK_field TK_lpar ARGS TK_rpar\n                | TK_field TK_lpar TK_rparARGS : ARGS TK_comma EXP\n            | EXPEXP  : ARITHMETICS\n            | RELATIONALS\n            | LOGICS\n            | CAST\n            | NATIVEFUNC\n            | CALLFUNC\n            | TK_id\n            | TK_field\n            | TK_varchar\n            | TK_int\n            | TK_double\n            | TK_date\n            | RW_true\n            | RW_false\n            | RW_null\n            | TK_lpar EXP TK_rparARITHMETICS  : EXP TK_plus EXP\n                    | EXP TK_minus EXP\n                    | EXP TK_mult EXP\n                    | EXP TK_div EXP\n                    | EXP TK_mod EXP\n                    | TK_minus EXP %prec TK_uminusRELATIONALS  : EXP TK_equal EXP\n                    | EXP TK_notequal EXP\n                    | EXP TK_lessequal EXP\n                    | EXP TK_greatequal EXP\n                    | EXP TK_less EXP\n                    | EXP TK_great EXPLOGICS   : EXP RW_and EXP\n                | EXP RW_or EXP\n                | RW_not EXPCAST : RW_cast TK_lpar EXP RW_as TYPE TK_rparNATIVEFUNC   : RW_lower TK_lpar EXP TK_rpar\n                    | RW_upper TK_lpar EXP TK_rpar\n                    | RW_round TK_lpar EXP TK_comma EXP TK_rpar\n                    | RW_len TK_lpar EXP TK_rpar\n                    | RW_truncate TK_lpar EXP TK_comma EXP TK_rpar\n                    | RW_typeof TK_lpar EXP TK_rparTYPE : RW_int\n            | RW_double\n            | RW_date\n            | RW_varchar\n            | RW_boolean'
    
_lr_action_items = {'$end':([0,1,2,3,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,122,],[-2,0,-1,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-25,]),'RW_break':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[22,22,-4,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,22,-25,22,22,22,22,22,22,]),'RW_continue':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[23,23,-4,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,23,-25,23,23,23,23,23,23,]),'RW_return':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[24,24,-4,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,24,-25,24,24,24,24,24,24,]),'RW_create':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[25,25,-4,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,25,-25,25,25,25,25,25,25,]),'RW_alter':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[27,27,-4,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,27,-25,27,27,27,27,27,27,]),'RW_drop':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,152,169,170,228,229,266,294,],[28,28,-4,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,28,-25,212,28,28,28,28,28,28,]),'RW_insert':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[29,29,-4,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,29,-25,29,29,29,29,29,29,]),'RW_update':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[30,30,-4,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,30,-25,30,30,30,30,30,30,]),'RW_truncate':([0,2,3,24,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,93,110,117,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,169,170,179,209,219,226,227,228,229,232,237,239,258,259,262,266,273,294,313,320,],[32,32,-4,88,88,88,32,88,88,88,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,88,88,88,88,32,88,88,-25,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,32,32,88,88,88,88,88,32,32,88,88,88,88,88,88,32,88,32,88,88,]),'RW_delete':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[33,33,-4,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,33,-25,33,33,33,33,33,33,]),'RW_select':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[34,34,-4,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,34,-25,34,34,34,34,34,34,]),'RW_declare':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[35,35,-4,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,35,-25,35,35,35,35,35,35,]),'RW_set':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,97,110,122,169,170,228,229,266,294,],[31,31,-4,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,155,31,-25,31,31,31,31,31,31,]),'RW_if':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,267,294,308,],[36,36,-4,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,36,-25,36,36,36,36,36,295,36,314,]),'RW_case':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[38,38,-4,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,38,-25,38,38,38,38,38,38,]),'RW_while':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[39,39,-4,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,39,-25,39,39,39,39,39,39,]),'RW_for':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[40,40,-4,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,40,-25,40,40,40,40,40,40,]),'TK_field':([0,2,3,24,30,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,90,91,92,93,94,95,96,99,100,110,117,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,155,156,159,160,161,169,170,179,201,209,211,214,219,226,227,228,229,231,232,237,239,253,254,255,258,259,260,262,266,269,273,279,289,294,305,313,320,],[26,26,-4,72,97,72,72,26,72,72,72,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,72,72,72,146,147,148,72,152,153,154,157,158,26,72,72,-25,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,215,72,220,222,72,26,26,72,241,72,252,256,72,72,72,26,26,270,72,72,72,285,286,287,72,72,215,72,26,296,72,241,307,26,312,72,72,]),'RW_begin':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,109,110,119,122,137,138,148,150,164,165,166,167,168,169,170,180,181,182,183,184,185,186,187,188,189,190,191,192,193,203,204,206,208,228,229,235,236,238,240,246,250,266,283,294,298,299,300,301,304,310,],[37,37,-4,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,170,37,37,-25,-120,-129,37,-96,-137,-138,-139,-140,-141,37,37,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,37,37,-91,-95,37,37,-131,-132,-134,-136,37,-92,37,-90,37,37,-130,-133,-135,37,37,]),'RW_print':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,122,169,170,228,229,266,294,],[41,41,-4,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,41,-25,41,41,41,41,41,41,]),'RW_end':([3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,110,113,114,115,116,122,137,138,150,172,174,175,176,180,181,182,183,184,185,186,187,188,189,190,191,192,193,208,228,229,235,236,238,240,272,294,299,300,301,],[-4,111,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,171,173,-75,-76,-78,-25,-120,-129,-96,230,-74,-77,-80,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-95,267,268,-131,-132,-134,-136,-79,308,-130,-133,-135,]),'RW_else':([3,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,112,114,116,122,137,138,150,175,180,181,182,183,184,185,186,187,188,189,190,191,192,193,208,228,235,236,238,240,272,299,300,301,],[-4,117,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,117,117,-78,-25,-120,-129,-96,-77,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-95,266,-131,-132,-134,-136,-79,-130,-133,-135,]),'TK_semicolon':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,103,105,106,108,111,121,137,138,150,153,157,163,164,165,166,167,168,171,173,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,205,208,210,218,220,221,222,223,224,230,235,236,238,240,247,249,261,263,264,265,268,270,271,278,282,284,285,286,291,293,295,296,297,299,300,301,311,312,314,315,316,319,],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,122,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-43,-36,-40,-27,-31,-94,-81,-120,-129,-96,-53,-63,-32,-137,-138,-139,-140,-141,-93,-73,-82,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-89,-95,-48,-33,-35,-41,-42,-39,-30,-70,-131,-132,-134,-136,-88,-87,-64,-32,-28,-29,-67,-71,-72,-44,-86,-49,-50,-51,-59,-34,-66,-68,-69,-130,-133,-135,-85,-52,-65,-83,-84,-54,]),'TK_id':([24,31,34,35,36,38,39,40,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,148,156,161,162,179,202,209,219,226,227,232,237,239,248,258,259,262,273,313,320,],[71,98,71,107,71,71,71,120,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,207,71,71,225,71,207,71,71,71,71,71,71,71,207,71,71,71,71,71,71,]),'TK_varchar':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,160,161,179,209,219,226,227,231,232,237,239,258,259,262,269,273,313,320,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,221,73,73,73,73,73,73,271,73,73,73,73,73,73,297,73,73,73,]),'TK_int':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TK_double':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TK_date':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'RW_true':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'RW_false':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RW_null':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'TK_lpar':([24,26,34,36,38,39,41,72,80,81,82,83,84,85,86,87,88,89,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,154,156,161,179,209,219,226,227,232,237,239,258,259,262,273,306,313,320,],[80,93,80,80,80,80,80,93,80,80,80,139,140,141,142,143,144,145,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,201,202,214,80,80,80,80,80,80,80,80,80,80,80,80,80,80,313,80,80,]),'TK_minus':([24,34,36,38,39,41,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,93,102,109,112,117,118,119,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,151,156,161,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,209,218,219,226,227,232,233,235,236,237,238,239,240,251,258,259,261,262,264,265,272,273,275,276,290,291,293,298,299,300,301,313,318,320,321,],[81,81,81,81,81,81,124,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,81,81,81,81,124,124,124,81,81,124,124,81,81,81,81,81,81,81,81,81,81,81,81,81,124,-120,124,81,81,81,81,81,81,81,-96,124,81,81,124,124,81,-115,-116,-117,-118,-119,124,124,124,124,124,124,124,124,-114,124,124,124,124,124,124,124,-95,81,124,81,81,81,81,124,-131,-132,81,-134,81,-136,124,81,81,124,81,124,124,124,81,124,124,124,124,124,124,-130,-133,-135,81,124,81,124,]),'RW_not':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RW_cast':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'RW_lower':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'RW_upper':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'RW_round':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'RW_len':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'RW_typeof':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'RW_table':([25,27,28,32,],[90,94,95,99,]),'RW_function':([25,],[91,]),'RW_procedure':([25,],[92,]),'RW_into':([29,],[96,]),'RW_from':([33,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,101,102,103,104,105,137,138,150,180,181,182,183,184,185,186,187,188,189,190,191,192,193,208,221,222,223,235,236,238,240,299,300,301,],[100,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,159,-43,-37,-38,-40,-120,-129,-96,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-95,-41,-42,-39,-131,-132,-134,-136,-130,-133,-135,]),'TK_mult':([34,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[104,125,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,125,125,125,125,125,125,-120,125,-96,125,125,125,125,125,-117,-118,-119,125,125,125,125,125,125,125,125,-114,125,125,125,125,125,125,125,-95,125,125,-131,-132,-134,-136,125,125,125,125,125,125,125,125,125,125,125,-130,-133,-135,125,125,]),'RW_when':([38,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,112,114,116,137,138,150,175,180,181,182,183,184,185,186,187,188,189,190,191,192,193,208,235,236,238,240,272,299,300,301,],[118,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,118,118,-78,-120,-129,-96,-77,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-95,-131,-132,-134,-136,-79,-130,-133,-135,]),'TK_plus':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[123,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,123,123,123,123,123,123,-120,123,-96,123,123,123,-115,-116,-117,-118,-119,123,123,123,123,123,123,123,123,-114,123,123,123,123,123,123,123,-95,123,123,-131,-132,-134,-136,123,123,123,123,123,123,123,123,123,123,123,-130,-133,-135,123,123,]),'TK_div':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[126,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,126,126,126,126,126,126,-120,126,-96,126,126,126,126,126,-117,-118,-119,126,126,126,126,126,126,126,126,-114,126,126,126,126,126,126,126,-95,126,126,-131,-132,-134,-136,126,126,126,126,126,126,126,126,126,126,126,-130,-133,-135,126,126,]),'TK_mod':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[127,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,127,127,127,127,127,127,-120,127,-96,127,127,127,127,127,-117,-118,-119,127,127,127,127,127,127,127,127,-114,127,127,127,127,127,127,127,-95,127,127,-131,-132,-134,-136,127,127,127,127,127,127,127,127,127,127,127,-130,-133,-135,127,127,]),'TK_equal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,102,109,112,119,121,136,137,138,150,151,163,164,165,166,167,168,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,215,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[128,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,156,128,128,128,128,128,128,-120,128,-96,128,226,-137,-138,-139,-140,-141,128,128,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,128,128,-114,128,128,128,128,128,128,128,-95,258,128,128,-131,-132,-134,-136,128,128,128,128,128,128,128,128,128,128,128,-130,-133,-135,128,128,]),'TK_notequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[129,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,129,129,129,129,129,129,-120,129,-96,129,129,129,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,129,129,-114,129,129,129,129,129,129,129,-95,129,129,-131,-132,-134,-136,129,129,129,129,129,129,129,129,129,129,129,-130,-133,-135,129,129,]),'TK_lessequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[130,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,130,130,130,130,130,130,-120,130,-96,130,130,130,-115,-116,-117,-118,-119,130,130,-123,-124,-125,-126,130,130,-114,130,130,130,130,130,130,130,-95,130,130,-131,-132,-134,-136,130,130,130,130,130,130,130,130,130,130,130,-130,-133,-135,130,130,]),'TK_greatequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[131,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,131,131,131,131,131,131,-120,131,-96,131,131,131,-115,-116,-117,-118,-119,131,131,-123,-124,-125,-126,131,131,-114,131,131,131,131,131,131,131,-95,131,131,-131,-132,-134,-136,131,131,131,131,131,131,131,131,131,131,131,-130,-133,-135,131,131,]),'TK_less':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[132,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,132,132,132,132,132,132,-120,132,-96,132,132,132,-115,-116,-117,-118,-119,132,132,-123,-124,-125,-126,132,132,-114,132,132,132,132,132,132,132,-95,132,132,-131,-132,-134,-136,132,132,132,132,132,132,132,132,132,132,132,-130,-133,-135,132,132,]),'TK_great':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[133,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,133,133,133,133,133,133,-120,133,-96,133,133,133,-115,-116,-117,-118,-119,133,133,-123,-124,-125,-126,133,133,-114,133,133,133,133,133,133,133,-95,133,133,-131,-132,-134,-136,133,133,133,133,133,133,133,133,133,133,133,-130,-133,-135,133,133,]),'RW_and':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[134,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,134,134,134,134,134,134,-120,-129,-96,134,134,134,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,134,-114,134,134,134,134,134,134,134,-95,134,134,-131,-132,-134,-136,134,134,134,134,134,134,134,134,134,134,134,-130,-133,-135,134,134,]),'RW_or':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,109,112,119,121,136,137,138,150,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,218,233,235,236,238,240,251,261,264,265,272,275,276,290,291,293,298,299,300,301,318,321,],[135,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,135,135,135,135,135,135,-120,-129,-96,135,135,135,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,135,135,135,135,135,135,135,-95,135,135,-131,-132,-134,-136,135,135,135,135,135,135,135,135,135,135,135,-130,-133,-135,135,135,]),'RW_as':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,137,138,148,150,164,165,166,167,168,173,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,203,206,208,230,235,236,238,240,250,283,299,300,301,],[-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,160,-120,-129,204,-96,-137,-138,-139,-140,-141,231,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,234,246,-91,-95,269,-131,-132,-134,-136,-92,-90,-130,-133,-135,]),'TK_comma':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,102,103,105,106,108,137,138,149,150,151,163,164,165,166,167,168,180,181,182,183,184,185,186,187,188,189,190,191,192,193,197,199,203,206,208,216,217,221,222,223,224,235,236,238,240,242,243,244,250,251,256,257,263,277,283,290,292,299,300,301,302,307,317,318,321,],[-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-43,161,-40,162,-31,-120,-129,209,-96,-98,-32,-137,-138,-139,-140,-141,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,237,239,248,-91,-95,260,-61,-41,-42,-39,-30,-131,-132,-134,-136,279,-46,248,-92,-97,-56,289,-32,-47,-90,-62,-60,-130,-133,-135,-45,-55,320,-58,-57,]),'RW_then':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,109,137,138,150,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,208,235,236,238,240,299,300,301,],[-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,169,-120,-129,-96,232,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-95,-131,-132,-134,-136,-130,-133,-135,]),'TK_rpar':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,93,136,137,138,149,150,151,164,165,166,167,168,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,198,200,202,206,208,235,236,238,240,242,243,244,250,251,256,257,274,275,276,277,283,299,300,301,302,307,317,318,321,],[-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,150,193,-120,-129,208,-96,-98,-137,-138,-139,-140,-141,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,235,236,238,240,245,-91,-95,-131,-132,-134,-136,278,-46,280,-92,-97,-56,288,299,300,301,-47,-90,-130,-133,-135,-45,-55,319,-58,-57,]),'TK_dot':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,137,138,150,180,181,182,183,184,185,186,187,188,189,190,191,192,193,208,233,235,236,238,240,299,300,301,],[-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-120,-129,-96,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-95,273,-131,-132,-134,-136,-130,-133,-135,]),'RW_where':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,137,138,150,158,180,181,182,183,184,185,186,187,188,189,190,191,192,193,208,216,217,220,235,236,238,240,290,292,299,300,301,],[-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-120,-129,-96,219,-115,-116,-117,-118,-119,-121,-122,-123,-124,-125,-126,-127,-128,-114,-95,259,-61,262,-131,-132,-134,-136,-62,-60,-130,-133,-135,]),'RW_int':([107,207,225,234,241,252,281,303,],[164,164,164,164,164,164,164,164,]),'RW_double':([107,207,225,234,241,252,281,303,],[165,165,165,165,165,165,165,165,]),'RW_date':([107,207,225,234,241,252,281,303,],[166,166,166,166,166,166,166,166,]),'RW_varchar':([107,207,225,234,241,252,281,303,],[167,167,167,167,167,167,167,167,]),'RW_boolean':([107,207,225,234,241,252,281,303,],[168,168,168,168,168,168,168,168,]),'RW_loop':([111,171,309,],[-94,-93,315,]),'RW_in':([120,],[179,]),'RW_add':([152,],[211,]),'RW_rename':([152,],[213,]),'RW_default':([163,164,165,166,167,168,],[227,-137,-138,-139,-140,-141,]),'RW_column':([212,213,],[253,255,]),'RW_to':([213,287,],[254,305,]),'RW_returns':([245,280,],[281,303,]),'RW_values':([288,],[306,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'INSTRUCTIONS':([0,37,169,170,266,],[2,110,228,229,294,]),'INSTRUCTION':([0,2,37,110,169,170,228,229,266,294,],[3,42,3,42,3,3,42,42,3,42,]),'CREATETABLE':([0,2,37,110,169,170,228,229,266,294,],[4,4,4,4,4,4,4,4,4,4,]),'ALTERTAB':([0,2,37,110,169,170,228,229,266,294,],[5,5,5,5,5,5,5,5,5,5,]),'DROPTAB':([0,2,37,110,169,170,228,229,266,294,],[6,6,6,6,6,6,6,6,6,6,]),'INSERTREG':([0,2,37,110,169,170,228,229,266,294,],[7,7,7,7,7,7,7,7,7,7,]),'UPDATETAB':([0,2,37,110,169,170,228,229,266,294,],[8,8,8,8,8,8,8,8,8,8,]),'TRUNCATETAB':([0,2,37,110,169,170,228,229,266,294,],[9,9,9,9,9,9,9,9,9,9,]),'DELETETAB':([0,2,37,110,169,170,228,229,266,294,],[10,10,10,10,10,10,10,10,10,10,]),'SELECT':([0,2,37,110,169,170,228,229,266,294,],[11,11,11,11,11,11,11,11,11,11,]),'DECLAREID':([0,2,37,110,169,170,228,229,266,294,],[12,12,12,12,12,12,12,12,12,12,]),'ASIGNID':([0,2,37,110,169,170,228,229,266,294,],[13,13,13,13,13,13,13,13,13,13,]),'IFSTRUCT':([0,2,37,110,169,170,228,229,266,294,],[14,14,14,14,14,14,14,14,14,14,]),'CASESTRUCT_S':([0,2,37,110,169,170,228,229,266,294,],[15,15,15,15,15,15,15,15,15,15,]),'WHILESTRUCT':([0,2,37,110,169,170,228,229,266,294,],[16,16,16,16,16,16,16,16,16,16,]),'FORSTRUCT':([0,2,37,110,169,170,228,229,266,294,],[17,17,17,17,17,17,17,17,17,17,]),'FUNCDEC':([0,2,37,110,169,170,228,229,266,294,],[18,18,18,18,18,18,18,18,18,18,]),'CALLFUNC':([0,2,24,34,36,37,38,39,41,80,81,82,93,110,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,169,170,179,209,219,226,227,228,229,232,237,239,258,259,262,266,273,294,313,320,],[19,19,70,70,70,19,70,70,70,70,70,70,70,19,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,19,19,70,70,70,70,70,19,19,70,70,70,70,70,70,19,70,19,70,70,]),'ENCAP':([0,2,37,110,119,148,169,170,203,204,228,229,246,266,294,298,304,310,],[20,20,20,20,178,205,20,20,247,249,20,20,282,20,20,309,311,316,]),'PRINT':([0,2,37,110,169,170,228,229,266,294,],[21,21,21,21,21,21,21,21,21,21,]),'EXP':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[63,102,109,112,119,121,136,137,138,151,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,218,102,233,251,261,264,265,272,275,276,290,291,293,298,318,321,]),'ARITHMETICS':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RELATIONALS':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LOGICS':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CAST':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NATIVEFUNC':([24,34,36,38,39,41,80,81,82,93,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,139,140,141,142,143,144,145,156,161,179,209,219,226,227,232,237,239,258,259,262,273,313,320,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'FIELDS':([34,],[101,]),'LIST_IDS':([34,],[103,]),'IDS':([34,161,],[105,223,]),'DECLIDS':([35,],[106,]),'DECLID':([35,162,],[108,224,]),'WHENELSE':([38,112,],[113,172,]),'WHENS':([38,112,],[114,114,]),'ELSE':([38,112,114,],[115,115,174,]),'WHEN':([38,112,114,],[116,116,175,]),'ARGS':([93,],[149,]),'TYPE':([107,207,225,234,241,252,281,303,],[163,250,263,274,277,284,304,310,]),'PARAMS':([148,202,],[203,244,]),'PARAM':([148,202,248,],[206,206,283,]),'ACTION':([152,],[210,]),'VALUESTAB':([155,],[216,]),'VALUETAB':([155,260,],[217,292,]),'ATTRIBUTES':([201,],[242,]),'ATTRIBUTE':([201,279,],[243,302,]),'LIST_ATTRIBS':([214,],[257,]),'LIST_EXPS':([313,],[317,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> INSTRUCTIONS','INIT',1,'p_INIT','Parser.py',57),
  ('INIT -> <empty>','INIT',0,'p_INIT','Parser.py',58),
  ('INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION','INSTRUCTIONS',2,'p_INSTRUCTIONS','Parser.py',63),
  ('INSTRUCTIONS -> INSTRUCTION','INSTRUCTIONS',1,'p_INSTRUCTIONS','Parser.py',64),
  ('INSTRUCTION -> CREATETABLE TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',69),
  ('INSTRUCTION -> ALTERTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',70),
  ('INSTRUCTION -> DROPTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',71),
  ('INSTRUCTION -> INSERTREG TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',72),
  ('INSTRUCTION -> UPDATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',73),
  ('INSTRUCTION -> TRUNCATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',74),
  ('INSTRUCTION -> DELETETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',75),
  ('INSTRUCTION -> SELECT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',76),
  ('INSTRUCTION -> DECLAREID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',77),
  ('INSTRUCTION -> ASIGNID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',78),
  ('INSTRUCTION -> IFSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',79),
  ('INSTRUCTION -> CASESTRUCT_S TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',80),
  ('INSTRUCTION -> WHILESTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',81),
  ('INSTRUCTION -> FORSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',82),
  ('INSTRUCTION -> FUNCDEC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',83),
  ('INSTRUCTION -> CALLFUNC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',84),
  ('INSTRUCTION -> ENCAP TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',85),
  ('INSTRUCTION -> PRINT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',86),
  ('INSTRUCTION -> RW_break TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',87),
  ('INSTRUCTION -> RW_continue TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',88),
  ('INSTRUCTION -> RW_return EXP TK_semicolon','INSTRUCTION',3,'p_INSTRUCTION','Parser.py',89),
  ('INSTRUCTION -> RW_return TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',90),
  ('DECLAREID -> RW_declare DECLIDS','DECLAREID',2,'p_DECLAREID','Parser.py',100),
  ('DECLAREID -> RW_declare TK_id TYPE TK_equal EXP','DECLAREID',5,'p_DECLAREID','Parser.py',101),
  ('DECLAREID -> RW_declare TK_id TYPE RW_default EXP','DECLAREID',5,'p_DECLAREID','Parser.py',102),
  ('DECLIDS -> DECLIDS TK_comma DECLID','DECLIDS',3,'p_DECLIDS','Parser.py',107),
  ('DECLIDS -> DECLID','DECLIDS',1,'p_DECLIDS','Parser.py',108),
  ('DECLID -> TK_id TYPE','DECLID',2,'p_DECLID','Parser.py',113),
  ('ASIGNID -> RW_set TK_id TK_equal EXP','ASIGNID',4,'p_ASIGNID','Parser.py',118),
  ('SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP','SELECT',6,'p_SELECT','Parser.py',123),
  ('SELECT -> RW_select FIELDS RW_from TK_field','SELECT',4,'p_SELECT','Parser.py',124),
  ('SELECT -> RW_select LIST_IDS','SELECT',2,'p_SELECT','Parser.py',125),
  ('FIELDS -> LIST_IDS','FIELDS',1,'p_FIELDS','Parser.py',128),
  ('FIELDS -> TK_mult','FIELDS',1,'p_FIELDS','Parser.py',129),
  ('LIST_IDS -> LIST_IDS TK_comma IDS','LIST_IDS',3,'p_LIST_IDS','Parser.py',132),
  ('LIST_IDS -> IDS','LIST_IDS',1,'p_LIST_IDS','Parser.py',133),
  ('IDS -> EXP RW_as TK_varchar','IDS',3,'p_IDS','Parser.py',136),
  ('IDS -> EXP RW_as TK_field','IDS',3,'p_IDS','Parser.py',137),
  ('IDS -> EXP','IDS',1,'p_IDS','Parser.py',138),
  ('CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar','CREATETABLE',6,'p_CREATETABLE','Parser.py',142),
  ('ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE','ATTRIBUTES',3,'p_ATTRIBUTES','Parser.py',145),
  ('ATTRIBUTES -> ATTRIBUTE','ATTRIBUTES',1,'p_ATTRIBUTES','Parser.py',146),
  ('ATTRIBUTE -> TK_field TYPE','ATTRIBUTE',2,'p_ATTRIBUTE','Parser.py',149),
  ('ALTERTAB -> RW_alter RW_table TK_field ACTION','ALTERTAB',4,'p_ALTERTAB','Parser.py',153),
  ('ACTION -> RW_add TK_field TYPE','ACTION',3,'p_ACTION','Parser.py',156),
  ('ACTION -> RW_drop RW_column TK_field','ACTION',3,'p_ACTION','Parser.py',157),
  ('ACTION -> RW_rename RW_to TK_field','ACTION',3,'p_ACTION','Parser.py',158),
  ('ACTION -> RW_rename RW_column TK_field RW_to TK_field','ACTION',5,'p_ACTION','Parser.py',159),
  ('DROPTAB -> RW_drop RW_table TK_field','DROPTAB',3,'p_DROPTAB','Parser.py',163),
  ('INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar','INSERTREG',10,'p_INSERTREG','Parser.py',167),
  ('LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field','LIST_ATTRIBS',3,'p_LIST_ATTRIBS','Parser.py',170),
  ('LIST_ATTRIBS -> TK_field','LIST_ATTRIBS',1,'p_LIST_ATTRIBS','Parser.py',171),
  ('LIST_EXPS -> LIST_EXPS TK_comma EXP','LIST_EXPS',3,'p_LIST_EXPS','Parser.py',174),
  ('LIST_EXPS -> EXP','LIST_EXPS',1,'p_LIST_EXPS','Parser.py',175),
  ('UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP','UPDATETAB',6,'p_UPDATETAB','Parser.py',179),
  ('VALUESTAB -> VALUESTAB TK_comma VALUETAB','VALUESTAB',3,'p_VALUESTAB','Parser.py',182),
  ('VALUESTAB -> VALUETAB','VALUESTAB',1,'p_VALUESTAB','Parser.py',183),
  ('VALUETAB -> TK_field TK_equal EXP','VALUETAB',3,'p_VALUETAB','Parser.py',186),
  ('TRUNCATETAB -> RW_truncate RW_table TK_field','TRUNCATETAB',3,'p_TRUNCATETAB','Parser.py',190),
  ('DELETETAB -> RW_delete RW_from TK_field RW_where EXP','DELETETAB',5,'p_DELETETAB','Parser.py',194),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if','IFSTRUCT',8,'p_IFSTRUCT','Parser.py',198),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if','IFSTRUCT',6,'p_IFSTRUCT','Parser.py',199),
  ('IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end','IFSTRUCT',5,'p_IFSTRUCT','Parser.py',200),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',207),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_varchar','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',208),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end','CASESTRUCT_S',4,'p_CASESTRUCT_S','Parser.py',209),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',210),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_varchar','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',211),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end','CASESTRUCT_S',3,'p_CASESTRUCT_S','Parser.py',212),
  ('WHENELSE -> WHENS ELSE','WHENELSE',2,'p_WHENELSE','Parser.py',219),
  ('WHENELSE -> WHENS','WHENELSE',1,'p_WHENELSE','Parser.py',220),
  ('WHENELSE -> ELSE','WHENELSE',1,'p_WHENELSE','Parser.py',221),
  ('WHENS -> WHENS WHEN','WHENS',2,'p_WHENS','Parser.py',227),
  ('WHENS -> WHEN','WHENS',1,'p_WHENS','Parser.py',228),
  ('WHEN -> RW_when EXP RW_then EXP','WHEN',4,'p_WHEN','Parser.py',233),
  ('ELSE -> RW_else EXP','ELSE',2,'p_ELSE','Parser.py',237),
  ('PRINT -> RW_print EXP','PRINT',2,'p_PRINT','Parser.py',242),
  ('WHILESTRUCT -> RW_while EXP ENCAP','WHILESTRUCT',3,'p_WHILESTRUCT','Parser.py',247),
  ('FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop','FORSTRUCT',8,'p_FORSTRUCT','Parser.py',252),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP','FUNCDEC',9,'p_FUNCDEC','Parser.py',256),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP','FUNCDEC',8,'p_FUNCDEC','Parser.py',257),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP','FUNCDEC',6,'p_FUNCDEC','Parser.py',258),
  ('FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',259),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',260),
  ('FUNCDEC -> RW_create RW_procedure TK_field ENCAP','FUNCDEC',4,'p_FUNCDEC','Parser.py',261),
  ('PARAMS -> PARAMS TK_comma PARAM','PARAMS',3,'p_PARAMS','Parser.py',264),
  ('PARAMS -> PARAM','PARAMS',1,'p_PARAMS','Parser.py',265),
  ('PARAM -> TK_id TYPE','PARAM',2,'p_PARAM','Parser.py',270),
  ('ENCAP -> RW_begin INSTRUCTIONS RW_end','ENCAP',3,'p_ENCAP','Parser.py',275),
  ('ENCAP -> RW_begin RW_end','ENCAP',2,'p_ENCAP','Parser.py',276),
  ('CALLFUNC -> TK_field TK_lpar ARGS TK_rpar','CALLFUNC',4,'p_CALLFUNC','Parser.py',282),
  ('CALLFUNC -> TK_field TK_lpar TK_rpar','CALLFUNC',3,'p_CALLFUNC','Parser.py',283),
  ('ARGS -> ARGS TK_comma EXP','ARGS',3,'p_ARGS','Parser.py',286),
  ('ARGS -> EXP','ARGS',1,'p_ARGS','Parser.py',287),
  ('EXP -> ARITHMETICS','EXP',1,'p_EXP','Parser.py',290),
  ('EXP -> RELATIONALS','EXP',1,'p_EXP','Parser.py',291),
  ('EXP -> LOGICS','EXP',1,'p_EXP','Parser.py',292),
  ('EXP -> CAST','EXP',1,'p_EXP','Parser.py',293),
  ('EXP -> NATIVEFUNC','EXP',1,'p_EXP','Parser.py',294),
  ('EXP -> CALLFUNC','EXP',1,'p_EXP','Parser.py',295),
  ('EXP -> TK_id','EXP',1,'p_EXP','Parser.py',296),
  ('EXP -> TK_field','EXP',1,'p_EXP','Parser.py',297),
  ('EXP -> TK_varchar','EXP',1,'p_EXP','Parser.py',298),
  ('EXP -> TK_int','EXP',1,'p_EXP','Parser.py',299),
  ('EXP -> TK_double','EXP',1,'p_EXP','Parser.py',300),
  ('EXP -> TK_date','EXP',1,'p_EXP','Parser.py',301),
  ('EXP -> RW_true','EXP',1,'p_EXP','Parser.py',302),
  ('EXP -> RW_false','EXP',1,'p_EXP','Parser.py',303),
  ('EXP -> RW_null','EXP',1,'p_EXP','Parser.py',304),
  ('EXP -> TK_lpar EXP TK_rpar','EXP',3,'p_EXP','Parser.py',305),
  ('ARITHMETICS -> EXP TK_plus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',320),
  ('ARITHMETICS -> EXP TK_minus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',321),
  ('ARITHMETICS -> EXP TK_mult EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',322),
  ('ARITHMETICS -> EXP TK_div EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',323),
  ('ARITHMETICS -> EXP TK_mod EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',324),
  ('ARITHMETICS -> TK_minus EXP','ARITHMETICS',2,'p_ARITHMETICS','Parser.py',325),
  ('RELATIONALS -> EXP TK_equal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',330),
  ('RELATIONALS -> EXP TK_notequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',331),
  ('RELATIONALS -> EXP TK_lessequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',332),
  ('RELATIONALS -> EXP TK_greatequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',333),
  ('RELATIONALS -> EXP TK_less EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',334),
  ('RELATIONALS -> EXP TK_great EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',335),
  ('LOGICS -> EXP RW_and EXP','LOGICS',3,'p_LOGICS','Parser.py',339),
  ('LOGICS -> EXP RW_or EXP','LOGICS',3,'p_LOGICS','Parser.py',340),
  ('LOGICS -> RW_not EXP','LOGICS',2,'p_LOGICS','Parser.py',341),
  ('CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar','CAST',6,'p_CAST','Parser.py',346),
  ('NATIVEFUNC -> RW_lower TK_lpar EXP TK_rpar','NATIVEFUNC',4,'p_NATIVEFUNC','Parser.py',351),
  ('NATIVEFUNC -> RW_upper TK_lpar EXP TK_rpar','NATIVEFUNC',4,'p_NATIVEFUNC','Parser.py',352),
  ('NATIVEFUNC -> RW_round TK_lpar EXP TK_comma EXP TK_rpar','NATIVEFUNC',6,'p_NATIVEFUNC','Parser.py',353),
  ('NATIVEFUNC -> RW_len TK_lpar EXP TK_rpar','NATIVEFUNC',4,'p_NATIVEFUNC','Parser.py',354),
  ('NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar','NATIVEFUNC',6,'p_NATIVEFUNC','Parser.py',355),
  ('NATIVEFUNC -> RW_typeof TK_lpar EXP TK_rpar','NATIVEFUNC',4,'p_NATIVEFUNC','Parser.py',356),
  ('TYPE -> RW_int','TYPE',1,'p_TYPE','Parser.py',365),
  ('TYPE -> RW_double','TYPE',1,'p_TYPE','Parser.py',366),
  ('TYPE -> RW_date','TYPE',1,'p_TYPE','Parser.py',367),
  ('TYPE -> RW_varchar','TYPE',1,'p_TYPE','Parser.py',368),
  ('TYPE -> RW_boolean','TYPE',1,'p_TYPE','Parser.py',369),
]
